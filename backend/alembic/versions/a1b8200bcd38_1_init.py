"""1_init

Revision ID: a1b8200bcd38
Revises: 
Create Date: 2023-03-08 13:58:53.671098

"""
import uuid
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from alembic import op
from auth.hash import Hash
from settings import get_settings

app_settings = get_settings()


# revision identifiers, used by Alembic.
revision = 'a1b8200bcd38'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    users_table = op.create_table('user',
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    # ### end Alembic commands ###

    op.bulk_insert(
        users_table,
        [
            {
                "user_id": uuid.UUID("00000000-0000-4000-a000-000000000000"),
                "email": app_settings.admin_email,
                "password": Hash.get_password_hash(app_settings.admin_password),
                "is_active": True,
                "is_admin": True
            }
        ]
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user')
    # ### end Alembic commands ###
